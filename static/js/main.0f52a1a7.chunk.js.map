{"version":3,"sources":["components/Pagination/Pagination.tsx","App.tsx","utils.ts","index.tsx"],"names":["Pagination","total","perPage","currentPage","onPageChange","maxPage","Math","ceil","pages","max","pagesArray","i","push","getPages","handlePageSelect","page","className","classNames","disabled","href","onClick","map","active","items","from","to","numbers","n","getNumbers","App","useState","setCurrentPage","itemsPerPage","setItemsPerPage","startPage","endPage","length","itemsOnPage","slice","id","onChange","event","value","target","Number","htmlFor","item","ReactDOM","render","document","getElementById"],"mappings":"kNAoBaA,EAA8B,SAAC,GAKrC,IAJLC,EAII,EAJJA,MACAC,EAGI,EAHJA,QACAC,EAEI,EAFJA,YACAC,EACI,EADJA,aAEMC,EAAUC,KAAKC,KAAKN,EAAQC,GAC5BM,EAxBS,SAACC,GAGhB,IAFA,IAAMC,EAAa,GAEVC,EAAI,EAAGA,GAAKF,EAAKE,GAAK,EAC7BD,EAAWE,KAAKD,GAGlB,OAAOD,EAiBOG,CAASR,GAEjBS,EAAmB,SAACC,GACpBA,IAASZ,GAAeY,EAAO,GAAKA,GAAQV,GAC9CD,EAAaW,IAIjB,OACE,qBAAIC,UAAU,aAAd,UACE,oBAAIA,UACFC,IAAW,YAAa,CAAEC,SAA0B,IAAhBf,IADtC,SAIE,mBACE,UAAQ,WACRa,UAAU,YACVG,KAAK,QACL,gBAA+B,IAAhBhB,EACfiB,QAAS,kBAAMN,EAAiBX,EAAc,IALhD,oBAWDK,EAAMa,KAAI,SAAAN,GAAI,OACb,oBAAIC,UACFC,IAAW,YAAa,CAAEK,OAAQP,IAASZ,IAD7C,SAIE,mBACE,UAAQ,WACRa,UAAU,YACVG,KAAI,WAAMJ,GACVK,QAAS,kBAAMN,EAAiBC,IAJlC,SAMGA,SAKP,oBAAIC,UACFC,IAAW,YAAa,CAAEC,SAAUf,IAAgBE,IADtD,SAIE,mBACE,UAAQ,WACRW,UAAU,YACVG,KAAK,QACL,gBAAehB,IAAgBE,EAC/Be,QAAS,kBAAMN,EAAiBX,EAAc,IALhD,wBClER,IAAMoB,ECNC,SAAoBC,EAAcC,GAGvC,IAFA,IAAMC,EAAU,GAEPC,EAAIH,EAAMG,GAAKF,EAAIE,GAAK,EAC/BD,EAAQd,KAAKe,GAGf,OAAOD,EDDKE,CAAW,EAAG,IACzBP,KAAI,SAAAM,GAAC,qBAAYA,MAEPE,EAAgB,WAC3B,MAAsCC,mBAAS,GAA/C,mBAAO3B,EAAP,KAAoB4B,EAApB,KACA,EAAwCD,mBAAS,GAAjD,mBAAOE,EAAP,KAAqBC,EAArB,KAEMC,GAAa/B,EAAc,GAAK6B,EAClCG,EAAUhC,EAAc6B,EAExBG,EAAUZ,EAAMa,SAClBD,EAAUZ,EAAMa,QAGlB,IAAMC,EAAcd,EAAMe,MAAMJ,EAAWC,GAa3C,OACE,sBAAKnB,UAAU,YAAf,UACE,uDAEA,mBAAGA,UAAU,OAAO,UAAQ,OAA5B,wBACWb,EADX,mBACiC+B,EAAY,EAD7C,cACoDC,EADpD,eACkEZ,EAAMa,OADxE,OAIA,sBAAKpB,UAAU,iBAAf,UACE,qBAAKA,UAAU,0BAAf,SACE,yBACE,UAAQ,kBACRuB,GAAG,kBACHvB,UAAU,eACVwB,SArBuB,SAACC,GAChC,IAAQC,EAAUD,EAAME,OAAhBD,MAERT,EAAgBW,OAAOF,IACvBX,EAAe,IAkBPW,MAAOV,EALT,UAOE,wBAAQU,MAAM,IAAd,eACA,wBAAQA,MAAM,IAAd,eACA,wBAAQA,MAAM,KAAd,gBACA,wBAAQA,MAAM,KAAd,qBAIJ,uBAAOG,QAAQ,kBAAkB7B,UAAU,qBAA3C,+BAKF,cAAC,EAAD,CACEf,MAAOsB,EAAMa,OACblC,QAAS8B,EACT7B,YAAaA,EACbC,aA5CmB,SAACW,GACxBgB,EAAehB,MA8Cb,6BACGsB,EAAYhB,KAAI,SAAAyB,GAAI,OACnB,oBAAe,UAAQ,OAAvB,SAA+BA,GAAtBA,YEpEnBC,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,W","file":"static/js/main.0f52a1a7.chunk.js","sourcesContent":["import React from 'react';\nimport classNames from 'classnames';\n\nconst getPages = (max: number) => {\n  const pagesArray = [];\n\n  for (let i = 1; i <= max; i += 1) {\n    pagesArray.push(i);\n  }\n\n  return pagesArray;\n};\n\ntype Props = {\n  total: number,\n  perPage: number,\n  currentPage: number,\n  onPageChange: (page: number) => void,\n};\n\nexport const Pagination: React.FC<Props> = ({\n  total,\n  perPage,\n  currentPage,\n  onPageChange,\n}) => {\n  const maxPage = Math.ceil(total / perPage);\n  const pages = getPages(maxPage);\n\n  const handlePageSelect = (page: number) => {\n    if (page !== currentPage && page > 0 && page <= maxPage) {\n      onPageChange(page);\n    }\n  };\n\n  return (\n    <ul className=\"pagination\">\n      <li className={\n        classNames('page-item', { disabled: currentPage === 1 })\n      }\n      >\n        <a\n          data-cy=\"prevLink\"\n          className=\"page-link\"\n          href=\"#prev\"\n          aria-disabled={currentPage === 1}\n          onClick={() => handlePageSelect(currentPage - 1)}\n        >\n          «\n        </a>\n      </li>\n\n      {pages.map(page => (\n        <li className={\n          classNames('page-item', { active: page === currentPage })\n        }\n        >\n          <a\n            data-cy=\"pageLink\"\n            className=\"page-link\"\n            href={`#${page}`}\n            onClick={() => handlePageSelect(page)}\n          >\n            {page}\n          </a>\n        </li>\n      ))}\n\n      <li className={\n        classNames('page-item', { disabled: currentPage === maxPage })\n      }\n      >\n        <a\n          data-cy=\"nextLink\"\n          className=\"page-link\"\n          href=\"#next\"\n          aria-disabled={currentPage === maxPage}\n          onClick={() => handlePageSelect(currentPage + 1)}\n        >\n          »\n        </a>\n      </li>\n    </ul>\n  );\n};\n","import React, { ChangeEvent, useState } from 'react';\nimport './App.css';\nimport { Pagination } from './components/Pagination';\nimport { getNumbers } from './utils';\n\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\nconst items = getNumbers(1, 42)\n  .map(n => `Item ${n}`);\n\nexport const App: React.FC = () => {\n  const [currentPage, setCurrentPage] = useState(1);\n  const [itemsPerPage, setItemsPerPage] = useState(5);\n\n  const startPage = (currentPage - 1) * itemsPerPage;\n  let endPage = currentPage * itemsPerPage;\n\n  if (endPage > items.length) {\n    endPage = items.length;\n  }\n\n  const itemsOnPage = items.slice(startPage, endPage);\n\n  const handlePageChange = (page: number) => {\n    setCurrentPage(page);\n  };\n\n  const handleItemsPerPageChange = (event: ChangeEvent<HTMLSelectElement>) => {\n    const { value } = event.target;\n\n    setItemsPerPage(Number(value));\n    setCurrentPage(1);\n  };\n\n  return (\n    <div className=\"container\">\n      <h1>Items with Pagination</h1>\n\n      <p className=\"lead\" data-cy=\"info\">\n        {`Page ${currentPage} (items ${startPage + 1} - ${endPage} of ${items.length})`}\n      </p>\n\n      <div className=\"form-group row\">\n        <div className=\"col-3 col-sm-2 col-xl-1\">\n          <select\n            data-cy=\"perPageSelector\"\n            id=\"perPageSelector\"\n            className=\"form-control\"\n            onChange={handleItemsPerPageChange}\n            value={itemsPerPage}\n          >\n            <option value=\"3\">3</option>\n            <option value=\"5\">5</option>\n            <option value=\"10\">10</option>\n            <option value=\"20\">20</option>\n          </select>\n        </div>\n\n        <label htmlFor=\"perPageSelector\" className=\"col-form-label col\">\n          items per page\n        </label>\n      </div>\n\n      <Pagination\n        total={items.length}\n        perPage={itemsPerPage}\n        currentPage={currentPage}\n        onPageChange={handlePageChange}\n      />\n\n      <ul>\n        {itemsOnPage.map(item => (\n          <li key={item} data-cy=\"item\">{item}</li>\n        ))}\n      </ul>\n    </div>\n  );\n};\n\nexport default App;\n","export function getNumbers(from: number, to: number): number[] {\n  const numbers = [];\n\n  for (let n = from; n <= to; n += 1) {\n    numbers.push(n);\n  }\n\n  return numbers;\n}\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}